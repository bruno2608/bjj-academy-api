generator client {
  provider        = "prisma-client-js"
  output          = "../generated/prisma"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  usuarios                    usuarios?

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model academias {
  id            String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nome          String
  cnpj          String?
  endereco      String?
  telefone      String?
  email         String?
  logo_url      String?
  ativa         Boolean?   @default(true)
  data_cadastro DateTime?  @default(dbgenerated("CURRENT_DATE")) @db.Date
  created_at    DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?  @default(now()) @db.Timestamptz(6)
  turmas        turmas[]
  usuarios      usuarios[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model alunos {
  id                         String           @id @db.Uuid
  faixa                      String?          @default("Branca")
  grau                       Int?             @default(0)
  peso                       String?
  altura                     String?
  data_inicio                DateTime?        @default(dbgenerated("CURRENT_DATE")) @db.Date
  mensalidade_dia_vencimento Int?
  mensalidade_valor          Decimal?         @db.Decimal(10, 2)
  plano                      String?
  observacoes                String?
  emergencia_contato         String?
  emergencia_telefone        String?
  created_at                 DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?        @default(now()) @db.Timestamptz(6)
  usuarios                   usuarios         @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  excecoes_turma             excecoes_turma[]
  graduacoes                 graduacoes[]
  matriculas                 matriculas[]
  pagamentos                 pagamentos[]
  presencas                  presencas[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model aulas {
  id               String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  turma_id         String?            @db.Uuid
  nome             String
  tipo             String
  dia_semana       Int?
  horario_inicio   DateTime           @db.Time(6)
  horario_fim      DateTime           @db.Time(6)
  instrutor_id     String?            @db.Uuid
  ativa            Boolean?           @default(true)
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?          @default(now()) @db.Timestamptz(6)
  usuarios         usuarios?          @relation(fields: [instrutor_id], references: [id], onUpdate: NoAction)
  turmas           turmas?            @relation(fields: [turma_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  aulas_instancias aulas_instancias[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model aulas_instancias {
  id                      String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  aula_id                 String?     @db.Uuid
  data                    DateTime    @db.Date
  instrutor_substituto_id String?     @db.Uuid
  status                  String?     @default("Programada")
  observacoes             String?
  created_at              DateTime?   @default(now()) @db.Timestamptz(6)
  aulas                   aulas?      @relation(fields: [aula_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios                usuarios?   @relation(fields: [instrutor_substituto_id], references: [id], onUpdate: NoAction)
  presencas               presencas[]

  @@unique([aula_id, data])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model excecoes_turma {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  aluno_id       String?   @db.Uuid
  turma_id       String?   @db.Uuid
  motivo         String
  autorizado_por String?   @db.Uuid
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  alunos         alunos?   @relation(fields: [aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios       usuarios? @relation(fields: [autorizado_por], references: [id], onUpdate: NoAction)
  turmas         turmas?   @relation(fields: [turma_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([aluno_id, turma_id])
  @@schema("public")
}

model faixas {
  id                 Int       @id @default(autoincrement())
  nome               String
  ordem              Int
  cor_hex            String?
  tempo_minimo_meses Int?
  idade_minima       Int?
  descricao          String?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model graduacoes {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  aluno_id       String?   @db.Uuid
  faixa_anterior String?
  grau_anterior  Int?
  faixa_nova     String
  grau_novo      Int
  data_graduacao DateTime  @db.Date
  professor_id   String?   @db.Uuid
  status         String?   @default("Pendente")
  observacoes    String?
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  alunos         alunos?   @relation(fields: [aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios       usuarios? @relation(fields: [professor_id], references: [id], onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model matriculas {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  aluno_id        String?   @db.Uuid
  turma_id        String?   @db.Uuid
  data_inicio     DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  data_fim        DateTime? @db.Date
  status          String?   @default("Ativa")
  observacoes     String?
  matriculado_por String?   @db.Uuid
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  alunos          alunos?   @relation(fields: [aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios        usuarios? @relation(fields: [matriculado_por], references: [id], onUpdate: NoAction)
  turmas          turmas?   @relation(fields: [turma_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([aluno_id, turma_id, data_inicio])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pagamentos {
  id               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  aluno_id         String?   @db.Uuid
  valor            Decimal   @db.Decimal(10, 2)
  data_pagamento   DateTime  @db.Date
  metodo_pagamento String?
  status           String?   @default("Confirmado")
  comprovante_url  String?
  mes_referencia   Int?
  ano_referencia   Int?
  observacoes      String?
  registrado_por   String?   @db.Uuid
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  alunos           alunos?   @relation(fields: [aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios         usuarios? @relation(fields: [registrado_por], references: [id], onUpdate: NoAction)

  @@schema("public")
}

model papeis {
  id              Int               @id @default(autoincrement())
  nome            String            @unique
  descricao       String?
  nivel_acesso    Int
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  usuarios_papeis usuarios_papeis[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model presencas {
  id                                          String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  aluno_id                                    String?           @db.Uuid
  aula_instancia_id                           String?           @db.Uuid
  status                                      String?           @default("Presente")
  observacao                                  String?
  registrada_por                              String?           @db.Uuid
  confirmada_por                              String?           @db.Uuid
  created_at                                  DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at                                  DateTime?         @default(now()) @db.Timestamptz(6)
  alunos                                      alunos?           @relation(fields: [aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  aulas_instancias                            aulas_instancias? @relation(fields: [aula_instancia_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios_presencas_confirmada_porTousuarios usuarios?         @relation("presencas_confirmada_porTousuarios", fields: [confirmada_por], references: [id], onUpdate: NoAction)
  usuarios_presencas_registrada_porTousuarios usuarios?         @relation("presencas_registrada_porTousuarios", fields: [registrada_por], references: [id], onUpdate: NoAction)

  @@unique([aluno_id, aula_instancia_id])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model turmas {
  id                  String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  academia_id         String?               @db.Uuid
  nome                String
  descricao           String?
  nivel               String?
  faixa_minima        String?               @default("Branca")
  faixa_maxima        String?
  idade_minima        Int?
  idade_maxima        Int?
  capacidade_maxima   Int?
  ativa               Boolean?              @default(true)
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @default(now()) @db.Timestamptz(6)
  aulas               aulas[]
  excecoes_turma      excecoes_turma[]
  matriculas          matriculas[]
  academias           academias?            @relation(fields: [academia_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  turmas_responsaveis turmas_responsaveis[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model turmas_responsaveis {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  turma_id   String?   @db.Uuid
  usuario_id String?   @db.Uuid
  papel      String
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  turmas     turmas?   @relation(fields: [turma_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios   usuarios? @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([turma_id, usuario_id])
  @@schema("public")
}

model usuarios {
  id                                                      String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  auth_id                                                 String?               @unique @db.Uuid
  academia_id                                             String                @db.Uuid
  nome                                                    String
  email                                                   String                @unique
  telefone                                                String?
  data_nascimento                                         DateTime?             @db.Date
  cpf                                                     String?
  genero                                                  String?
  foto_url                                                String?
  data_cadastro                                           DateTime?             @default(dbgenerated("CURRENT_DATE")) @db.Date
  ativo                                                   Boolean?              @default(true)
  created_at                                              DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                                              DateTime?             @default(now()) @db.Timestamptz(6)
  senha                                                   String?
  alunos                                                  alunos?
  aulas                                                   aulas[]
  aulas_instancias                                        aulas_instancias[]
  excecoes_turma                                          excecoes_turma[]
  graduacoes                                              graduacoes[]
  matriculas                                              matriculas[]
  pagamentos                                              pagamentos[]
  presencas_presencas_confirmada_porTousuarios            presencas[]           @relation("presencas_confirmada_porTousuarios")
  presencas_presencas_registrada_porTousuarios            presencas[]           @relation("presencas_registrada_porTousuarios")
  turmas_responsaveis                                     turmas_responsaveis[]
  academias                                               academias             @relation(fields: [academia_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                                                   users?                @relation(fields: [auth_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios_papeis_usuarios_papeis_concedido_porTousuarios usuarios_papeis[]     @relation("usuarios_papeis_concedido_porTousuarios")
  usuarios_papeis_usuarios_papeis_usuario_idTousuarios    usuarios_papeis[]     @relation("usuarios_papeis_usuario_idTousuarios")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model usuarios_papeis {
  id                                               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  usuario_id                                       String?   @db.Uuid
  papel_id                                         Int?
  concedido_por                                    String?   @db.Uuid
  data_concessao                                   DateTime? @default(now()) @db.Timestamptz(6)
  created_at                                       DateTime? @default(now()) @db.Timestamptz(6)
  usuarios_usuarios_papeis_concedido_porTousuarios usuarios? @relation("usuarios_papeis_concedido_porTousuarios", fields: [concedido_por], references: [id], onUpdate: NoAction)
  papeis                                           papeis?   @relation(fields: [papel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios_usuarios_papeis_usuario_idTousuarios    usuarios? @relation("usuarios_papeis_usuario_idTousuarios", fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([usuario_id, papel_id])
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}
